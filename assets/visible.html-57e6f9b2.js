const e=JSON.parse('{"key":"v-365d886e","path":"/docs/JavaScript/visible.html","title":"面试官：如何判断一个元素是否在可视区域中？","lang":"zh-CN","frontmatter":{"description":"一、用途 可视区域即我们浏览网页的设备肉眼可见的区域，如下图 在日常开发中，我们经常需要判断目标元素是否在视窗之内或者和视窗的距离小于一个值（例如 100 px），从而实现一些常用的功能，例如： 图片的懒加载; 列表的无限滚动; 计算广告元素的曝光情况; 可点击链接的预加载; 二、实现方式 判断一个元素是否在可视区域，我们常用的有三种办法： offse...","head":[["meta",{"property":"og:url","content":"https://bzirs.github.io/webinterview/webinterview/docs/JavaScript/visible.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"面试官：如何判断一个元素是否在可视区域中？"}],["meta",{"property":"og:description","content":"一、用途 可视区域即我们浏览网页的设备肉眼可见的区域，如下图 在日常开发中，我们经常需要判断目标元素是否在视窗之内或者和视窗的距离小于一个值（例如 100 px），从而实现一些常用的功能，例如： 图片的懒加载; 列表的无限滚动; 计算广告元素的曝光情况; 可点击链接的预加载; 二、实现方式 判断一个元素是否在可视区域，我们常用的有三种办法： offse..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-30T09:18:59.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-30T09:18:59.000Z"}]]},"headers":[{"level":2,"title":"一、用途","slug":"一、用途","link":"#一、用途","children":[]},{"level":2,"title":"二、实现方式","slug":"二、实现方式","link":"#二、实现方式","children":[{"level":3,"title":"offsetTop、scrollTop","slug":"offsettop、scrolltop","link":"#offsettop、scrolltop","children":[]},{"level":3,"title":"getBoundingClientRect","slug":"getboundingclientrect","link":"#getboundingclientrect","children":[]},{"level":3,"title":"Intersection Observer","slug":"intersection-observer","link":"#intersection-observer","children":[]},{"level":3,"title":"三、案例分析","slug":"三、案例分析","link":"#三、案例分析","children":[]}]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"git":{"createdTime":1672391939000,"updatedTime":1672391939000,"contributors":[{"name":"bzirs","email":"bzirs@outlook.com","commits":1}]},"readingTime":{"minutes":4.59,"words":1376},"filePathRelative":"docs/JavaScript/visible.md","localizedDate":"2022年12月30日","autoDesc":true}');export{e as data};
