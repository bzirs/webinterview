const e=JSON.parse('{"key":"v-65b21d58","path":"/docs/vue/mvvm%E5%92%8Cmvc%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"08. mvvm 和 mvc 的区别","lang":"zh-CN","frontmatter":{"description":"逐字稿 定义 mvvm 的定义是:mvvm 是 Model-View-ViewModel 的简写,即模型-视图-视图模型。 模型（Model）指的是后端传递的数据。视图(View)指的是所看到的页面。视图模型(ViewModel)是 mvvm 模式的核心，它是连接 view 和 model 的桥梁。我们称之为数据的双向绑定。 mvc 的定义是:Mode...","head":[["meta",{"property":"og:url","content":"https://bzirs.github.io/webinterview/webinterview/docs/vue/mvvm%E5%92%8Cmvc%E7%9A%84%E5%8C%BA%E5%88%AB.html"}],["meta",{"property":"og:title","content":"08. mvvm 和 mvc 的区别"}],["meta",{"property":"og:description","content":"逐字稿 定义 mvvm 的定义是:mvvm 是 Model-View-ViewModel 的简写,即模型-视图-视图模型。 模型（Model）指的是后端传递的数据。视图(View)指的是所看到的页面。视图模型(ViewModel)是 mvvm 模式的核心，它是连接 view 和 model 的桥梁。我们称之为数据的双向绑定。 mvc 的定义是:Mode..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-22T15:26:31.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-01-22T15:26:31.000Z"}]]},"headers":[{"level":2,"title":"逐字稿","slug":"逐字稿","link":"#逐字稿","children":[{"level":3,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":3,"title":"区别","slug":"区别","link":"#区别","children":[]},{"level":3,"title":"总结使用场景","slug":"总结使用场景","link":"#总结使用场景","children":[]}]}],"git":{"createdTime":1674388435000,"updatedTime":1674401191000,"contributors":[{"name":"bzirs","email":"bzirs@outlook.com","commits":1},{"name":"reminiscence1","email":"[200~12033681+reminiscence1@user.noreply.gitee.com","commits":1}]},"readingTime":{"minutes":1.27,"words":382},"filePathRelative":"docs/vue/mvvm和mvc的区别.md","localizedDate":"2023年1月22日","autoDesc":true}');export{e as data};
