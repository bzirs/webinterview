const e=JSON.parse('{"key":"v-65348550","path":"/docs/NodeJS/Stream.html","title":"面试官：说说对 Node 中的 Stream 的理解？应用场景？","lang":"zh-CN","frontmatter":{"description":"一、是什么 流（Stream），是一个数据传输手段，是端到端信息交换的一种方式，而且是有顺序的,是逐块读取数据、处理内容，用于顺序读取输入或写入输出 Node.js中很多对象都实现了流，总之它是会冒数据（以 Buffer 为单位） 它的独特之处在于，它不像传统的程序那样一次将一个文件读入内存，而是逐块读取数据、处理其内容，而不是将其全部保存在内存中 流...","head":[["meta",{"property":"og:url","content":"https://bzirs.github.io/webinterview/webinterview/docs/NodeJS/Stream.html"}],["meta",{"property":"og:title","content":"面试官：说说对 Node 中的 Stream 的理解？应用场景？"}],["meta",{"property":"og:description","content":"一、是什么 流（Stream），是一个数据传输手段，是端到端信息交换的一种方式，而且是有顺序的,是逐块读取数据、处理内容，用于顺序读取输入或写入输出 Node.js中很多对象都实现了流，总之它是会冒数据（以 Buffer 为单位） 它的独特之处在于，它不像传统的程序那样一次将一个文件读入内存，而是逐块读取数据、处理其内容，而不是将其全部保存在内存中 流..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-30T09:18:59.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-30T09:18:59.000Z"}]]},"headers":[{"level":2,"title":"一、是什么","slug":"一、是什么","link":"#一、是什么","children":[]},{"level":2,"title":"二、种类","slug":"二、种类","link":"#二、种类","children":[{"level":3,"title":"双工流","slug":"双工流","link":"#双工流","children":[]},{"level":3,"title":"双工流","slug":"双工流-1","link":"#双工流-1","children":[]}]},{"level":2,"title":"三、应用场景","slug":"三、应用场景","link":"#三、应用场景","children":[{"level":3,"title":"get请求返回文件给客户端","slug":"get请求返回文件给客户端","link":"#get请求返回文件给客户端","children":[]},{"level":3,"title":"文件操作","slug":"文件操作","link":"#文件操作","children":[]},{"level":3,"title":"一些打包工具的底层操作","slug":"一些打包工具的底层操作","link":"#一些打包工具的底层操作","children":[]}]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"git":{"createdTime":1672391939000,"updatedTime":1672391939000,"contributors":[{"name":"bzirs","email":"bzirs@outlook.com","commits":1}]},"readingTime":{"minutes":3.31,"words":994},"filePathRelative":"docs/NodeJS/Stream.md","localizedDate":"2022年12月30日","autoDesc":true}');export{e as data};
