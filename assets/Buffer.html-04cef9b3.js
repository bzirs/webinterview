const e=JSON.parse('{"key":"v-71c98ee0","path":"/docs/NodeJS/Buffer.html","title":"面试官：说说对 Node 中的 Buffer 的理解？应用场景？","lang":"zh-CN","frontmatter":{"description":"一、是什么 在Node应用中，需要处理网络协议、操作数据库、处理图片、接收上传文件等，在网络流和文件的操作中，要处理大量二进制数据，而Buffer就是在内存中开辟一片区域（初次初始化为8KB），用来存放二进制数据 在上述操作中都会存在数据流动，每个数据流动的过程中，都会有一个最小或最大数据量 如果数据到达的速度比进程消耗的速度快，那么少数早到达的数据会...","head":[["meta",{"property":"og:url","content":"https://bzirs.github.io/webinterview/webinterview/docs/NodeJS/Buffer.html"}],["meta",{"property":"og:title","content":"面试官：说说对 Node 中的 Buffer 的理解？应用场景？"}],["meta",{"property":"og:description","content":"一、是什么 在Node应用中，需要处理网络协议、操作数据库、处理图片、接收上传文件等，在网络流和文件的操作中，要处理大量二进制数据，而Buffer就是在内存中开辟一片区域（初次初始化为8KB），用来存放二进制数据 在上述操作中都会存在数据流动，每个数据流动的过程中，都会有一个最小或最大数据量 如果数据到达的速度比进程消耗的速度快，那么少数早到达的数据会..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-30T09:18:59.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-30T09:18:59.000Z"}]]},"headers":[{"level":2,"title":"一、是什么","slug":"一、是什么","link":"#一、是什么","children":[]},{"level":2,"title":"二、使用方法","slug":"二、使用方法","link":"#二、使用方法","children":[{"level":3,"title":"Buffer.from()","slug":"buffer-from","link":"#buffer-from","children":[]},{"level":3,"title":"Buffer.alloc()","slug":"buffer-alloc","link":"#buffer-alloc","children":[]}]},{"level":2,"title":"三、应用场景","slug":"三、应用场景","link":"#三、应用场景","children":[{"level":3,"title":"I/O操作","slug":"i-o操作","link":"#i-o操作","children":[]},{"level":3,"title":"加解密","slug":"加解密","link":"#加解密","children":[]},{"level":3,"title":"zlib.js","slug":"zlib-js","link":"#zlib-js","children":[]}]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"git":{"createdTime":1672391939000,"updatedTime":1672391939000,"contributors":[{"name":"bzirs","email":"bzirs@outlook.com","commits":1}]},"readingTime":{"minutes":3.57,"words":1070},"filePathRelative":"docs/NodeJS/Buffer.md","localizedDate":"2022年12月30日","autoDesc":true}');export{e as data};
