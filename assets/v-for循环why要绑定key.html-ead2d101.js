import{ab as e,E as r,F as a,ac as o}from"./framework-c74165a4.js";const t={},c=o('<h1 id="_06-为什么-v-for-一定要绑定-key" tabindex="-1"><a class="header-anchor" href="#_06-为什么-v-for-一定要绑定-key" aria-hidden="true">#</a> 06. 为什么 v-for 一定要绑定 key</h1><h2 id="逐字稿" tabindex="-1"><a class="header-anchor" href="#逐字稿" aria-hidden="true">#</a> 逐字稿</h2><p>使用v-for 指令更新渲染过的元素列表时, 默认采用<strong>就地复用</strong>策略. 如果数据项的顺序发生改变, Vue 不会移动DOM 元素来匹配数据项的顺序, 而是简单<strong>复用</strong>每个元素, 并且确保它在特定索引下显示已被渲染过的每个元素. key的作用主要是为了<code>准确以及高效</code>的更新虚拟DOM</p><p>(@赵泓鉴)</p>',4),n=[c];function s(_,d){return r(),a("div",null,n)}const i=e(t,[["render",s],["__file","v-for循环why要绑定key.html.vue"]]);export{i as default};
