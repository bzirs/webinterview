import{ab as o,E as n,F as t,C as e,Q as r,L as c,ac as d,U as i}from"./framework-c74165a4.js";const l={},s=d('<h1 id="_03-vue常用修饰符" tabindex="-1"><a class="header-anchor" href="#_03-vue常用修饰符" aria-hidden="true">#</a> 03. vue常用修饰符</h1><h2 id="v-on" tabindex="-1"><a class="header-anchor" href="#v-on" aria-hidden="true">#</a> v-on</h2><ul><li><code>.stop</code>: 阻止默认冒泡行为(event.stopPropagation)</li><li><code>.prevent</code>: 阻止表单默认提交行为(event.preventDefault)</li><li><code>.native</code>: 监听组件元素的原生事件</li></ul><h2 id="v-bind" tabindex="-1"><a class="header-anchor" href="#v-bind" aria-hidden="true">#</a> v-bind</h2><ul><li><code>.prop</code>: 作为一个DOM property绑定而不是作为attribute绑定。</li><li><code>.camel</code>: 将kebab-case attribute名转换为camelCase(2.1.0+)</li><li><code>.sync</code>: 语法糖，会扩展成一个更新父组件绑定值的v-on侦听器(2.3.0+)</li></ul><h2 id="v-model" tabindex="-1"><a class="header-anchor" href="#v-model" aria-hidden="true">#</a> v-model</h2><ul><li><code>.lazy</code>: 取代<strong>input</strong>监听<strong>change</strong>事件</li><li><code>.number</code>: 输入字符串转为有效的数字</li><li><code>.trim</code>: 输入首尾空格过滤</li></ul>',7),h={href:"https://www.yuque.com/silence1224/zvw0fi/kcado0#27adf32f",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,"(@赵泓鉴)",-1);function _(v,p){const a=i("ExternalLinkIcon");return n(),t("div",null,[s,e("p",null,[e("a",h,[r("参考文档"),c(a)])]),u])}const m=o(l,[["render",_],["__file","vue常用修饰符.html.vue"]]);export{m as default};
