const e=JSON.parse('{"key":"v-4fcce46f","path":"/docs/typescript/interface.html","title":"面试官：说说你对 TypeScript 中接口的理解？应用场景？","lang":"zh-CN","frontmatter":{"description":"一、是什么 接口是一系列抽象方法的声明，是一些方法特征的集合，这些方法都应该是抽象的，需要由具体的类去实现，然后第三方就可以通过这组抽象方法调用，让具体的类执行具体的方法 简单来讲，一个接口所描述的是一个对象相关的属性和方法，但并不提供具体创建此对象实例的方法 typescript的核心功能之一就是对类型做检测，虽然这种检测方式是“鸭式辨型法”，而接口...","head":[["meta",{"property":"og:url","content":"https://bzirs.github.io/webinterview/webinterview/docs/typescript/interface.html"}],["meta",{"property":"og:title","content":"面试官：说说你对 TypeScript 中接口的理解？应用场景？"}],["meta",{"property":"og:description","content":"一、是什么 接口是一系列抽象方法的声明，是一些方法特征的集合，这些方法都应该是抽象的，需要由具体的类去实现，然后第三方就可以通过这组抽象方法调用，让具体的类执行具体的方法 简单来讲，一个接口所描述的是一个对象相关的属性和方法，但并不提供具体创建此对象实例的方法 typescript的核心功能之一就是对类型做检测，虽然这种检测方式是“鸭式辨型法”，而接口..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-30T09:18:59.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-30T09:18:59.000Z"}]]},"headers":[{"level":2,"title":"一、是什么","slug":"一、是什么","link":"#一、是什么","children":[]},{"level":2,"title":"二、使用方式","slug":"二、使用方式","link":"#二、使用方式","children":[]},{"level":2,"title":"三、应用场景","slug":"三、应用场景","link":"#三、应用场景","children":[]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"git":{"createdTime":1672391939000,"updatedTime":1672391939000,"contributors":[{"name":"bzirs","email":"bzirs@outlook.com","commits":1}]},"readingTime":{"minutes":2.58,"words":774},"filePathRelative":"docs/typescript/interface.md","localizedDate":"2022年12月30日","autoDesc":true}');export{e as data};
