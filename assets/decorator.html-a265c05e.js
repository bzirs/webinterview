const e=JSON.parse('{"key":"v-b4fc1b40","path":"/docs/es6/decorator.html","title":"面试官：你是怎么理解ES6中 Decorator 的？使用场景？","lang":"zh-CN","frontmatter":{"description":"一、介绍 Decorator，即装饰器，从名字上很容易让我们联想到装饰者模式 简单来讲，装饰者模式就是一种在不改变原类和使用继承的情况下，动态地扩展对象功能的设计理论。 ES6中`Decorator功能亦如此，其本质也不是什么高大上的结构，就是一个普通的函数，用于扩展类属性和类方法 这里定义一个士兵，这时候他什么装备都没有 定义一个得到 AK 装备的函...","head":[["meta",{"property":"og:url","content":"https://bzirs.github.io/webinterview/webinterview/docs/es6/decorator.html"}],["meta",{"property":"og:title","content":"面试官：你是怎么理解ES6中 Decorator 的？使用场景？"}],["meta",{"property":"og:description","content":"一、介绍 Decorator，即装饰器，从名字上很容易让我们联想到装饰者模式 简单来讲，装饰者模式就是一种在不改变原类和使用继承的情况下，动态地扩展对象功能的设计理论。 ES6中`Decorator功能亦如此，其本质也不是什么高大上的结构，就是一个普通的函数，用于扩展类属性和类方法 这里定义一个士兵，这时候他什么装备都没有 定义一个得到 AK 装备的函..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-30T09:18:59.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-30T09:18:59.000Z"}]]},"headers":[{"level":2,"title":"一、介绍","slug":"一、介绍","link":"#一、介绍","children":[]},{"level":2,"title":"二、用法","slug":"二、用法","link":"#二、用法","children":[{"level":3,"title":"类的装饰","slug":"类的装饰","link":"#类的装饰","children":[]},{"level":3,"title":"类属性的装饰","slug":"类属性的装饰","link":"#类属性的装饰","children":[]},{"level":3,"title":"注意","slug":"注意","link":"#注意","children":[]}]},{"level":2,"title":"三、使用场景","slug":"三、使用场景","link":"#三、使用场景","children":[]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"git":{"createdTime":1672391939000,"updatedTime":1672391939000,"contributors":[{"name":"bzirs","email":"bzirs@outlook.com","commits":1}]},"readingTime":{"minutes":3.43,"words":1029},"filePathRelative":"docs/es6/decorator.md","localizedDate":"2022年12月30日","autoDesc":true}');export{e as data};
