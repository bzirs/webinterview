const e=JSON.parse('{"key":"v-65b21d58","path":"/docs/vue/mvvm%E5%92%8Cmvc%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"08. mvvm 和 mvc 的区别","lang":"zh-CN","frontmatter":{"description":"逐字稿 MVC: M指的是model数据模型, V指的是视图模型, C指的是controller控制器. MVC是项目的一种分层架构思想, 将复杂的业务逻辑抽离为职能单一的模块, 每个模块看似相互独立, 其实又各自相互依赖. 它保证了模块的职能单一性, 方便程序的开发, 维护, 耦合度低 MVVM 是指 ModelViewViewModel(数据模型-...","head":[["meta",{"property":"og:url","content":"https://bzirs.github.io/webinterview/webinterview/docs/vue/mvvm%E5%92%8Cmvc%E7%9A%84%E5%8C%BA%E5%88%AB.html"}],["meta",{"property":"og:title","content":"08. mvvm 和 mvc 的区别"}],["meta",{"property":"og:description","content":"逐字稿 MVC: M指的是model数据模型, V指的是视图模型, C指的是controller控制器. MVC是项目的一种分层架构思想, 将复杂的业务逻辑抽离为职能单一的模块, 每个模块看似相互独立, 其实又各自相互依赖. 它保证了模块的职能单一性, 方便程序的开发, 维护, 耦合度低 MVVM 是指 ModelViewViewModel(数据模型-..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-01-30T01:04:26.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-01-30T01:04:26.000Z"}]]},"headers":[{"level":2,"title":"逐字稿","slug":"逐字稿","link":"#逐字稿","children":[]},{"level":2,"title":"逐字稿2","slug":"逐字稿2","link":"#逐字稿2","children":[{"level":3,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":3,"title":"区别","slug":"区别","link":"#区别","children":[]},{"level":3,"title":"总结使用场景","slug":"总结使用场景","link":"#总结使用场景","children":[]}]}],"git":{"createdTime":1674388435000,"updatedTime":1675040666000,"contributors":[{"name":"bzirs","email":"bzirs@outlook.com","commits":2},{"name":"reminiscence1","email":"[200~12033681+reminiscence1@user.noreply.gitee.com","commits":1}]},"readingTime":{"minutes":1.93,"words":580},"filePathRelative":"docs/vue/mvvm和mvc的区别.md","localizedDate":"2023年1月22日","autoDesc":true}');export{e as data};
