const e=JSON.parse('{"key":"v-a00c6846","path":"/docs/design/Factory%20%20Pattern.html","title":"面试官：说说你对工厂模式的理解？应用场景？","lang":"zh-CN","frontmatter":{"description":"一、是什么 工厂模式是用来创建对象的一种最常用的设计模式，不暴露创建对象的具体逻辑，而是将将逻辑封装在一个函数中，那么这个函数就可以被视为一个工厂 其就像工厂一样重复的产生类似的产品，工厂模式只需要我们传入正确的参数，就能生产类似的产品 举个例子： 编程中，在一个 A 类中通过 new 的方式实例化了类 B，那么 A 类和 B 类之间就存在关联（耦合）...","head":[["meta",{"property":"og:url","content":"https://bzirs.github.io/webinterview/webinterview/docs/design/Factory%20%20Pattern.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"面试官：说说你对工厂模式的理解？应用场景？"}],["meta",{"property":"og:description","content":"一、是什么 工厂模式是用来创建对象的一种最常用的设计模式，不暴露创建对象的具体逻辑，而是将将逻辑封装在一个函数中，那么这个函数就可以被视为一个工厂 其就像工厂一样重复的产生类似的产品，工厂模式只需要我们传入正确的参数，就能生产类似的产品 举个例子： 编程中，在一个 A 类中通过 new 的方式实例化了类 B，那么 A 类和 B 类之间就存在关联（耦合）..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-30T09:18:59.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-30T09:18:59.000Z"}]]},"headers":[{"level":2,"title":"一、是什么","slug":"一、是什么","link":"#一、是什么","children":[]},{"level":2,"title":"二、实现","slug":"二、实现","link":"#二、实现","children":[{"level":3,"title":"简单工厂模式","slug":"简单工厂模式","link":"#简单工厂模式","children":[]},{"level":3,"title":"工厂方法模式","slug":"工厂方法模式","link":"#工厂方法模式","children":[]},{"level":3,"title":"抽象工厂模式","slug":"抽象工厂模式","link":"#抽象工厂模式","children":[]}]},{"level":2,"title":"三、应用场景","slug":"三、应用场景","link":"#三、应用场景","children":[]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"git":{"createdTime":1672391939000,"updatedTime":1672391939000,"contributors":[{"name":"bzirs","email":"bzirs@outlook.com","commits":1}]},"readingTime":{"minutes":5.64,"words":1693},"filePathRelative":"docs/design/Factory  Pattern.md","localizedDate":"2022年12月30日","autoDesc":true}');export{e as data};
