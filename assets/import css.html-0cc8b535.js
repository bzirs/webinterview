const e=JSON.parse('{"key":"v-054565ee","path":"/docs/React/import%20css.html","title":"面试官：说说react中引入css的方式有哪几种？区别？","lang":"zh-CN","frontmatter":{"description":"一、是什么 组件式开发选择合适的css解决方案尤为重要 通常会遵循以下规则： 可以编写局部css，不会随意污染其他组件内的原生；; 可以编写动态的css，可以获取当前组件的一些状态，根据状态的变化生成不同的css样式；; 支持所有的css特性：伪类、动画、媒体查询等；; 编写起来简洁方便、最好符合一贯的css风格特点; 在这一方面，vue使用css起来...","head":[["meta",{"property":"og:url","content":"https://bzirs.github.io/webinterview/webinterview/docs/React/import%20css.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"面试官：说说react中引入css的方式有哪几种？区别？"}],["meta",{"property":"og:description","content":"一、是什么 组件式开发选择合适的css解决方案尤为重要 通常会遵循以下规则： 可以编写局部css，不会随意污染其他组件内的原生；; 可以编写动态的css，可以获取当前组件的一些状态，根据状态的变化生成不同的css样式；; 支持所有的css特性：伪类、动画、媒体查询等；; 编写起来简洁方便、最好符合一贯的css风格特点; 在这一方面，vue使用css起来..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-30T09:18:59.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-12-30T09:18:59.000Z"}]]},"headers":[{"level":2,"title":"一、是什么","slug":"一、是什么","link":"#一、是什么","children":[]},{"level":2,"title":"二、方式","slug":"二、方式","link":"#二、方式","children":[{"level":3,"title":"在组件内直接使用","slug":"在组件内直接使用","link":"#在组件内直接使用","children":[]},{"level":3,"title":"组件中引入css文件","slug":"组件中引入css文件","link":"#组件中引入css文件","children":[]},{"level":3,"title":"组件中引入 .module.css 文件","slug":"组件中引入-module-css-文件","link":"#组件中引入-module-css-文件","children":[]},{"level":3,"title":"CSS in JS","slug":"css-in-js","link":"#css-in-js","children":[]}]},{"level":2,"title":"三、区别","slug":"三、区别","link":"#三、区别","children":[]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"git":{"createdTime":1672391939000,"updatedTime":1672391939000,"contributors":[{"name":"bzirs","email":"bzirs@outlook.com","commits":1}]},"readingTime":{"minutes":4.31,"words":1292},"filePathRelative":"docs/React/import css.md","localizedDate":"2022年12月30日","autoDesc":true}');export{e as data};
